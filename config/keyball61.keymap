#define DEFAULT 0
#define SYM     1
#define FUN     2
#define MOUSE   3
#define SCROLL  4
#define SNIPE   5

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        eisu {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <28 27>;
            layers = <0>;
        };

        kana {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <31 32>;
            layers = <0>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <40 39>;
            layers = <0>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <45 46>;
            layers = <0>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <28 31>;
            layers = <0>;
        };

        go_linehead {
            bindings = <&kp LS(LC(LEFT))>;
            key-positions = <31 32>;
            layers = <3>;
        };

        go_lineend {
            bindings = <&kp LC(LS(RIGHT))>;
            key-positions = <32 33>;
            layers = <3>;
        };

        thumb_homes {
            bindings = <&kp LC(TAB)>;
            key-positions = <52 55>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <25 34>;
        };

        close {
            bindings = <&kp RC(W)>;
            key-positions = <31 32 33>;
        };

        reload {
            bindings = <&kp RC(R)>;
            key-positions = <19 20>;
        };
    };

    behaviors {
        slash_pipe_backslash: slash_pipe_backslash {
            compatible = "zmk,behavior-tap-dance";
            label = "SLASH_PIPE_BACKSLASH";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp PIPE>, <&kp BACKSLASH>;
        };

        copy_paste_save_cut: copy_paste_save_cut {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY_PASTE_SAVE_CUT";
            #binding-cells = <0>;
            bindings = <&mt LC(S) LC(C)>, <&mt LC(X) LC(V)>;
        };

        gui_undo_redo: gui_undo_redo {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_UNDO_REDO";
            #binding-cells = <0>;
            bindings = <&mt LEFT_GUI LC(Z)>, <&kp (LC(Z))>;
        };

        hyphen_underscore_tilda_equal: hyphen_underscore_tilda_equal {
            compatible = "zmk,behavior-tap-dance";
            label = "HYPHEN_UNDERSCORE_TILDA_EQUAL";
            #binding-cells = <0>;
            bindings = <&mt UNDERSCORE MINUS>, <&mt EQUAL TILDE>;

            tapping-term-ms = <175>;
        };

        kakkos: kakkos {
            compatible = "zmk,behavior-tap-dance";
            label = "KAKKOS";
            #binding-cells = <0>;
            bindings =
                <&mt LEFT_BRACE LEFT_PARENTHESIS>,
                <&mt LESS_THAN LEFT_BRACKET>;
        };

        colon_semicolon: colon_semicolon {
            compatible = "zmk,behavior-tap-dance";
            label = "COLON_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMICOLON>;

            tapping-term-ms = <175>;
        };

        quotations: quotations {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTATIONS";
            #binding-cells = <0>;
            bindings =
                <&mt GRAVE SINGLE_QUOTE>,
                <&mt LEFT_BRACKET DOUBLE_QUOTES>;

            tapping-term-ms = <175>;
        };

        lang_mod: lang_mod {
            compatible = "zmk,behavior-tap-dance";
            label = "LANG_MOD";
            #binding-cells = <0>;
            bindings = <&mt RIGHT_SHIFT LANGUAGE_2>, <&kp LANGUAGE_1>;

            tapping-term-ms = <175>;
        };

        expressions: expressions {
            compatible = "zmk,behavior-tap-dance";
            label = "EXPRESSIONS";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
        };

        kakko_tojirus: kakko_tojirus {
            compatible = "zmk,behavior-tap-dance";
            label = "KAKKO_TOJIRUS";
            #binding-cells = <0>;
            bindings =
                <&mt RIGHT_BRACE RIGHT_PARENTHESIS>,
                <&mt GREATER_THAN RIGHT_BRACKET>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp DELETE            &kp EXCLAMATION   &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT                                                &kp CARET     &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&kp ESCAPE            &kp Q             &kp L   &kp U     &kp F       &colon_semicolon                                           &expressions  &kp W            &kp R         &kp Y                 &mt PLUS EQUAL         &mt LG(H) PRINTSCREEN
&copy_paste_save_cut  &kp E             &kp I   &kp A     &kp O       &hyphen_underscore_tilda_equal                             &kp K         &kp T            &kp N         &kp S                 &kp H                  &kp P
&gui_undo_redo        &mt LEFT_SHIFT Z  &kp X   &kp C     &kp V       &quotations                     &kakkos    &kakko_tojirus  &kp G         &kp D            &kp M         &kp J                 &kp B                  &slash_pipe_backslash
&kp F18               &mo 6                                           &mt LCTRL ENTER                 &lt 3 TAB  &lt 1 TAB       &lt 3 SPACE   &lt 2 BACKSPACE  &lang_mod     &kp RCTRL             &kp RIGHT_ALT          &kp RIGHT_GUI
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans    &trans    &trans    &trans    &trans                    &trans         &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans    &trans    &trans                    &trans         &trans  &trans  &trans  &trans  &trans
&trans  &mkp MB4  &mkp MB5  &mkp MB2  &mkp MB1  &mkp MB3                  &kp PAGE_UP    &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans    &trans    &trans    &trans  &trans  &kp PAGE_DOWN  &trans  &trans  &trans  &trans  &trans
&trans  &trans                                  &trans    &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans    &trans    &trans    &trans    &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans    &trans    &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mkp MB4  &mkp MB5  &mkp MB2  &mkp MB1  &mkp MB3                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans    &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                                  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        number_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans        &trans    &trans          &trans           &trans               &trans
&trans      &trans        &kp N9        &kp N8        &kp N7        &trans                        &trans        &trans    &kp UP_ARROW    &trans           &trans               &trans
&trans      &kp LEFT      &kp NUMBER_6  &kp N5        &kp NUMBER_4  &trans                        &kp LA(LEFT)  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LA(RIGHT_ARROW)  &trans
&trans      &kp N0        &kp NUMBER_3  &kp NUMBER_2  &kp NUMBER_1  &kp DOT       &trans  &trans  &trans        &trans    &trans          &trans           &trans               &trans
&trans      &trans                                                  &trans        &trans  &trans  &trans        &trans    &trans          &trans           &trans               &trans
            >;

            label = "NUM";
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp LA(LC(DELETE))  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans              &trans           &trans       &trans    &trans      &trans                       &trans          &trans         &trans            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans              &trans           &trans       &trans    &trans      &trans                       &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp RIGHT_BRACE        &trans
&trans              &trans           &trans       &trans    &trans      &trans       &trans  &trans  &kp UNDERSCORE  &kp PLUS       &trans            &kp LESS_THAN         &kp GREATER_THAN       &trans
&trans              &trans                                              &trans       &trans  &trans  &trans          &trans         &trans            &trans                &trans                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp F5                  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans                  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans                  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans                             &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
            >;
        };
    };
};
